/*
 *	Ingenieria de software I 
 *	Esquema de Base de Datos MOCEL
 *	Definicion de Datos
 *	Integrantes: Andreina Marcano 09-10478
 *		     Luis Manuel Garcia 09-10963
 *	Tarea II
 */ 

CREATE TABLE CLIENTE (
	TIPO		VARCHAR(3)	NOT NULL,
	IDENTIFICADOR	VARCHAR(10)	NOT NULL,
	NOMBRE		VARCHAR(50)	NOT NULL,
	DIRECCION	VARCHAR(200)	NOT NULL,
	TELEFONO	VARCHAR(15)	NOT NULL,
	PRIMARY KEY(IDENTIFICADOR)
);

CREATE TABLE PRODUCTO (
	CODIGO_PRODUCTO	VARCHAR(10)	NOT NULL,
	IDENTIFICADOR	VARCHAR(10)	NOT NULL,
	CODIGO_PLAN	VARCHAR(5)	NOT NULL,
	NOMBRE_PRODUCTO	VARCHAR(30)	NOT NULL,
	DESCRIPCION	VARCHAR(200)	NOT NULL,
	TIPO_TARJETA	VARCHAR(7)	NOT NULL,
	NUMERO_TARJETA	VARCHAR(16)	NOT NULL,
	FECHA_VENC	DATE		NOT NULL,
	NOMBRE_BANCO	VARCHAR(20)	NOT NULL,
	DIA_FACTURACION VARCHAR(2)	NOT NULL,
	FECHA_AFIL	DATE		NOT NULL,
	TIPO_PLAN	CHAR		NOT NULL,
	MD_O_PU		NUMERIC(14,5)	NOT NULL,
	PRIMARY KEY(CODIGO_PRODUCTO)
);

CREATE TABLE PLAN (
	CODIGO_PLAN	VARCHAR(5)	NOT NULL,
	NOMBRE_PLAN	VARCHAR(30)	NOT NULL,
	DESCRIPCION	VARCHAR(200)	NOT NULL,
	RENTA_BASICA	NUMERIC(14,5)	NOT NULL,
	CODIGO_PAQUETE	VARCHAR(5)	NOT NULL,
	PRIMARY KEY(CODIGO_PLAN)
);

CREATE TABLE PLAN_PREPAGO (
	CODIGO_PLAN	VARCHAR(5)	NOT NULL,
	PRIMARY KEY(CODIGO_PLAN)
);

CREATE TABLE PLAN_POSTPAGO (
	CODIGO_PLAN	VARCHAR(5)	NOT NULL,
	PRIMARY KEY(CODIGO_PLAN)
);

CREATE TABLE PAQUETE (
	CODIGO_PAQUETE	VARCHAR(5)	NOT NULL,
	NOMBRE_PAQUETE	VARCHAR(30)	NOT NULL,
	DESCRIPCION	VARCHAR(200)	NOT NULL,
	MONTO_PAQUETE	NUMERIC(14,5)	NOT NULL,	
	PRIMARY KEY(CODIGO_PAQUETE)
);

CREATE TABLE SERVICIO (
	CODIGO_SERVICIO	VARCHAR(10)	NOT NULL,
	NOMBRE_SERVICIO	VARCHAR(30)	NOT NULL,
	DESCRIPCION	VARCHAR(200)	NOT NULL,
	TARIFA_BASICA	NUMERIC(14,5)	NOT NULL,
	PRIMARY KEY(CODIGO_SERVICIO)
);

CREATE TABLE INCLUYE (
	CODIGO_PAQUETE	VARCHAR(5)	NOT NULL,
	CODIGO_SERVICIO VARCHAR(10)	NOT NULL,
	CANT_SERVICIO	INT		NOT NULL,	
	PRIMARY KEY(CODIGO_PAQUETE, CODIGO_SERVICIO, CANT_SERVICIO)
);

CREATE TABLE CONSUME (
	CODIGO_PRODUCTO VARCHAR(10)	NOT NULL,
	CODIGO_SERVICIO	VARCHAR(10)	NOT NULL,	
	CANT_CONSUMIDA	INT		NOT NULL,
	PRIMARY KEY(CODIGO_PRODUCTO, CODIGO_SERVICIO, CANT_CONSUMIDA)
);

CREATE TABLE ASOCIA (	
	CODIGO_PRODUCTO VARCHAR(10)	NOT NULL,
	CODIGO_PAQUETE	VARCHAR(5)	NOT NULL,
	PRIMARY KEY(CODIGO_PRODUCTO, CODIGO_PAQUETE)
);

ALTER TABLE CLIENTE ADD
	CONSTRAINT DOM_TIPO
	CHECK (TIPO IN ('CI', 'ci', 'RIF', 'rif'))
;

ALTER TABLE PRODUCTO ADD
	CONSTRAINT FK_PRODUCTO_CLIENTE
	FOREIGN KEY(IDENTIFICADOR)
	REFERENCES CLIENTE(IDENTIFICADOR)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE PRODUCTO ADD
	CONSTRAINT FK_PRODUCTO_PLAN
	FOREIGN KEY(CODIGO_PLAN)
	REFERENCES PLAN(CODIGO_PLAN)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE PRODUCTO ADD
	CONSTRAINT DOM_TIPO_TARJETA
	CHECK (TIPO_TARJETA IN ('D', 'd', 'C', 'c'))
;

ALTER TABLE PRODUCTO ADD
	CONSTRAINT EXP_F_VENC_AFIL
	CHECK (FECHA_VENC >= FECHA_AFIL)
;

ALTER TABLE PRODUCTO ADD
	CONSTRAINT DOM_MD_O_PU
	CHECK (MD_O_PU >= 0.00)
;

ALTER TABLE PRODUCTO ADD
	CONSTRAINT DOM_TIPO_PLAN
	CHECK (TIPO_PLAN IN ('E', 'O'))
;

ALTER TABLE PLAN ADD
	CONSTRAINT FK_PLAN_PAQUETE 
	FOREIGN KEY(CODIGO_PAQUETE)
	REFERENCES PAQUETE(CODIGO_PAQUETE)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE PLAN ADD
	CONSTRAINT DOM_RENTA_BASICA
	CHECK (RENTA_BASICA > 0.00)
;

ALTER TABLE PLAN_PREPAGO ADD
	CONSTRAINT FK_PLAN_PREPAGO_PLAN 
	FOREIGN KEY(CODIGO_PLAN)
	REFERENCES PLAN(CODIGO_PLAN)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE PLAN_POSTPAGO ADD
	CONSTRAINT FK_PLAN_POSTPAGO_PLAN 
	FOREIGN KEY(CODIGO_PLAN)
	REFERENCES PLAN(CODIGO_PLAN)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE PAQUETE ADD
	CONSTRAINT DOM_MONTO_PAQUETE
	CHECK (MONTO_PAQUETE >= 0.00)
;

ALTER TABLE SERVICIO ADD
	CONSTRAINT DOM_TARIFA_BASICA
	CHECK (TARIFA_BASICA >= 0.00)
;

ALTER TABLE INCLUYE ADD
	CONSTRAINT FK_INCLUYE_PAQUETE 
	FOREIGN KEY(CODIGO_PAQUETE)
	REFERENCES PAQUETE(CODIGO_PAQUETE)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE INCLUYE ADD
	CONSTRAINT FK_CONTIENE_SERVICIO 
	FOREIGN KEY(CODIGO_SERVICIO)
	REFERENCES SERVICIO(CODIGO_SERVICIO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE INCLUYE ADD
	CONSTRAINT DOM_CANT_SERVICIO
	CHECK (CANT_SERVICIO >= 0)
;

ALTER TABLE CONSUME ADD
	CONSTRAINT FK_CONSUME_PRODUCTO 
	FOREIGN KEY(CODIGO_PRODUCTO)
	REFERENCES PRODUCTO(CODIGO_PRODUCTO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE CONSUME ADD
	CONSTRAINT FK_CONSUME_SERVICIO 
	FOREIGN KEY(CODIGO_SERVICIO)
	REFERENCES SERVICIO(CODIGO_SERVICIO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE CONSUME ADD
	CONSTRAINT DOM_CANT_CONSUMIDA
	CHECK (CANT_CONSUMIDA >= 0)
;

ALTER TABLE ASOCIA ADD
	CONSTRAINT FK_ASOCIA_PRODUCTO 
	FOREIGN KEY(CODIGO_PRODUCTO)
	REFERENCES PRODUCTO(CODIGO_PRODUCTO)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;

ALTER TABLE ASOCIA ADD
	CONSTRAINT FK_INCLUYE_PAQUETE 
	FOREIGN KEY(CODIGO_PAQUETE)
	REFERENCES PAQUETE(CODIGO_PAQUETE)
	ON UPDATE CASCADE
	ON DELETE CASCADE
;


/*******TRIGGERS*******/

CREATE OR REPLACE LANGUAGE plpgsql;

CREATE OR REPLACE FUNCTION CONSUMO_IMPOSIBLE() RETURNS trigger AS $BODY$
BEGIN
	IF NEW.CODIGO_PRODUCTO IN (
		SELECT CODIGO_PRODUCTO FROM PRODUCTO WHERE TIPO_PLAN = 'E' AND MD_O_PU < 0.00
	) THEN
		RAISE EXCEPTION 'NO TIENE SUFICIENTE SALDO';
	END IF;
	RETURN NEW;
END
$BODY$  LANGUAGE plpgsql;

CREATE TRIGGER CONSUMO_IMPOSIBLE BEFORE INSERT OR UPDATE ON CONSUME
FOR EACH ROW EXECUTE PROCEDURE CONSUMO_IMPOSIBLE(); 


CREATE OR REPLACE FUNCTION TARJETA_VENCIDA() RETURNS trigger AS $BODY$
BEGIN
	IF NEW.CODIGO_PRODUCTO IN (
		SELECT CODIGO_PRODUCTO FROM PRODUCTO WHERE FECHA_VENC <= CURRENT_TIMESTAMP
	) THEN
		RAISE EXCEPTION 'SU TARJETA ESTA VENCIDA';
	END IF;
	RETURN NEW;
END
$BODY$  LANGUAGE plpgsql;

CREATE TRIGGER TARJETA_VENCIDA BEFORE INSERT OR UPDATE ON CONSUME
FOR EACH ROW EXECUTE PROCEDURE TARJETA_VENCIDA(); 


